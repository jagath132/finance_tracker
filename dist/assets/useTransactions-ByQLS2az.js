import{r as o}from"./vendor-C2v42iKu.js";import{u as f}from"./index-z9EIHczJ.js";import{z as d}from"./ui-BvQeeWjB.js";const O=()=>{const{user:n}=f(),[u,r]=o.useState([]),[g,l]=o.useState({income:0,expenses:0,balance:0,incomeChange:0,expenseChange:0}),[y,p]=o.useState(!0),S=o.useMemo(()=>{let e=0,t=0;for(const a of u)a.type==="income"?e+=a.amount:t+=a.amount;return{income:e,expenses:t,balance:e-t,incomeChange:0,expenseChange:0}},[u]);o.useEffect(()=>{l(S)},[S]);const m=o.useCallback(async()=>{if(!n)return;p(!0);const e=[{id:"1",amount:5e3,description:"Monthly Salary",category_id:"1",user_id:n.id,transaction_date:new Date().toISOString(),type:"income",created_at:new Date().toISOString(),notes:"Regular monthly income"},{id:"2",amount:150,description:"Grocery Shopping",category_id:"2",user_id:n.id,transaction_date:new Date().toISOString(),type:"expense",created_at:new Date().toISOString()},{id:"3",amount:50,description:"Bus Fare",category_id:"3",user_id:n.id,transaction_date:new Date().toISOString(),type:"expense",created_at:new Date().toISOString()}];r(e),p(!1)},[n]);return o.useEffect(()=>{m()},[m]),{transactions:u,summary:g,loading:y,addTransaction:async e=>{if(!n)return;const t=`temp-${Date.now()}`,a={...e,id:t,user_id:n.id,created_at:new Date().toISOString()};r(s=>[a,...s]);try{await new Promise(i=>setTimeout(i,500));const s={...e,id:Date.now().toString(),user_id:n.id,created_at:new Date().toISOString()};r(i=>i.map(c=>c.id===t?s:c)),d.success("Transaction added!")}catch{r(i=>i.filter(c=>c.id!==t)),d.error("Failed to add transaction")}},updateTransaction:async(e,t)=>{r(a=>a.map(s=>s.id===e?{...s,...t,updated_at:new Date().toISOString()}:s)),d.success("Transaction updated!")},deleteTransaction:async e=>{r(t=>t.filter(a=>a.id!==e)),d.success("Transaction deleted!")},refetch:m}};export{O as u};
