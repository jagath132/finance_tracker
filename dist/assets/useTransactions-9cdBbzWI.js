import{r as a}from"./vendor-gOpYt1fm.js";import{u as T,s as c}from"./index-CbbJHnKT.js";import{z as t}from"./ui-Dy4X14_K.js";const w=()=>{const{user:o}=T(),[i,u]=a.useState([]),[f,l]=a.useState({income:0,expenses:0,balance:0,incomeChange:0,expenseChange:0}),[p,d]=a.useState(!0),m=a.useMemo(()=>{let s=0,e=0;for(const r of i)r.type==="income"?s+=r.amount:e+=r.amount;return{income:s,expenses:e,balance:s-e,incomeChange:0,expenseChange:0}},[i]);a.useEffect(()=>{l(m)},[m]);const n=a.useCallback(async()=>{if(!o)return;d(!0);const{data:s,error:e}=await c.from("transactions").select("*").eq("user_id",o.id).order("transaction_date",{ascending:!1});e?(t.error(e.message),u([])):u(s||[]),d(!1)},[o]);return a.useEffect(()=>{n()},[n]),{transactions:i,summary:f,loading:p,addTransaction:async s=>{if(!o)return;const{error:e}=await c.from("transactions").insert({...s,user_id:o.id});e?t.error(e.message):(t.success("Transaction added!"),n())},updateTransaction:async(s,e)=>{const{error:r}=await c.from("transactions").update(e).eq("id",s);r?t.error(r.message):(t.success("Transaction updated!"),n())},deleteTransaction:async s=>{const{error:e}=await c.from("transactions").delete().eq("id",s);e?t.error(e.message):(t.success("Transaction deleted!"),n())},refetch:n}};export{w as u};
