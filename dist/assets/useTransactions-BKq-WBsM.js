import{r as t}from"./vendor-BLIq4JPC.js";import{u as g,s as i}from"./index-B5lVPReX.js";import{z as n}from"./ui-9V2nKd88.js";const S=()=>{const{user:o}=g(),[c,d]=t.useState([]),[l,p]=t.useState({income:0,expenses:0,balance:0,incomeChange:0,expenseChange:0}),[T,m]=t.useState(!0),f=t.useMemo(()=>{const s=c.filter(a=>a.type==="income").reduce((a,u)=>a+u.amount,0),e=c.filter(a=>a.type==="expense").reduce((a,u)=>a+u.amount,0);return{income:s,expenses:e,balance:s-e,incomeChange:0,expenseChange:0}},[c]);t.useEffect(()=>{p(f)},[f]);const r=t.useCallback(async()=>{if(!o)return;m(!0);const{data:s,error:e}=await i.from("transactions").select("*").eq("user_id",o.id).order("transaction_date",{ascending:!1});e?(n.error(e.message),d([])):d(s||[]),m(!1)},[o]);return t.useEffect(()=>{r()},[r]),{transactions:c,summary:l,loading:T,addTransaction:async s=>{if(!o)return;const{error:e}=await i.from("transactions").insert({...s,user_id:o.id});e?n.error(e.message):(n.success("Transaction added!"),r())},updateTransaction:async(s,e)=>{const{error:a}=await i.from("transactions").update(e).eq("id",s);a?n.error(a.message):(n.success("Transaction updated!"),r())},deleteTransaction:async s=>{const{error:e}=await i.from("transactions").delete().eq("id",s);e?n.error(e.message):(n.success("Transaction deleted!"),r())},refetch:r}};export{S as u};
